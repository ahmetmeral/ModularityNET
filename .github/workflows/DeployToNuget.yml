  
name: "Deploy to NUGET"

#on: [push]
on:
  push:
    tags:
      - '1.*.*'

env:
  PROJECT_PATH: 'Code/Core/ModularityNET/ModularityNET.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'
  GIT_SOURCE_URL: 'https://nuget.pkg.github.com/ahmetmeral/index.json'
  
jobs:
  deploy:
    name: 'Deploy'
    runs-on: 'windows-latest'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      
      #- name: 'Get Version'
      #  id: vars
      #  run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      #- name: 'Version Output'
      #  env:
      #    RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      #  run: | 
      #    echo ${{ env.RELEASE_VERSION }} 
      #    echo ${{ steps.vars.outputs.tag }} 

      - name: 'Install dotnet'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
          #dotnet-version: '3.1.x'

      - name: 'Restore packages'
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: 'Build project'
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

      - name: 'Pack project'
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
        #run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ env.RELEASE_VERSION }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: 'Push github.com package'
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s ${{ env.GIT_SOURCE_URL }} --skip-duplicate

      - name: 'Push nuget.org package'
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s ${{ env.NUGET_SOURCE_URL }} --skip-duplicate
